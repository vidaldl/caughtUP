name: Build and Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python for version extraction
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Get version from setup.py
        id: get_version
        run: |
          # Extract version from setup.py using Python
          VERSION=$(python -c "import re; print(re.search(r'version=[\"\'](.*?)[\"\']', open('setup.py').read()).group(1))")
          echo "Version detected from setup.py: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false
          body: |
              ## CaughtUP Release v${{ steps.get_version.outputs.version }}
              
              Automated build from the main branch.
              
              ### Downloads
              - Windows: CaughtUP-Windows-${{ steps.get_version.outputs.version }}.zip
              - macOS: CaughtUP-macOS-${{ steps.get_version.outputs.version }}.zip
              
              ### macOS Installation Instructions
              Due to Apple's security features (Gatekeeper), you'll need to follow these steps to open the app:
              
              1. Extract the zip file
              2. Right-click (or Control+click) on CaughtUP.app
              3. Select "Open" from the context menu
              4. When the security warning appears, click "Open"
              
              If the above method doesn't work, open Terminal and run:
              
              ```bash
              xattr -cr /path/to/CaughtUP.app
              ```
              Replace `/path/to/CaughtUP.app` with the actual path to the app.
              *This is an automatically generated draft release. Please add release notes before publishing.*

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Modify spec file to remove logs directory dependency
        run: |
          (Get-Content CaughtUP.spec) -replace "'logs', 'logs'", "'build_resources', 'build_resources'" | Set-Content CaughtUP.spec
      
      - name: Build Windows executable
        run: |
          pyinstaller CaughtUP.spec
      
      - name: Zip Windows artifact
        run: |
          Compress-Archive -Path dist\CaughtUP.exe -DestinationPath CaughtUP-Windows.zip
      
      - name: Upload Windows artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./CaughtUP-Windows.zip
          asset_name: CaughtUP-Windows-${{ needs.create-release.outputs.version }}.zip
          asset_content_type: application/zip

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          brew install create-dmg
      
      - name: Modify spec file to remove logs directory dependency
        run: |
          sed -i '' "s/'logs', 'logs'/'build_resources', 'build_resources'/g" CaughtUP.spec
      
      - name: Build macOS app
        run: |
          pyinstaller CaughtUP.spec
      
      # This step thoroughly removes all quarantine attributes
      - name: Remove quarantine and extended attributes
        run: |
          # First we use xattr -cr to recursively clear all attributes
          xattr -cr dist/CaughtUP.app
          
          # Make sure the binary is definitely executable
          chmod -R +x dist/CaughtUP.app/Contents/MacOS/
          
          # For good measure, manually remove the specific quarantine attribute
          find dist/CaughtUP.app -exec xattr -d com.apple.quarantine {} \; 2>/dev/null || true
          
          # Check if the app has any remaining xattrs
          echo "Checking for any remaining extended attributes:"
          find dist/CaughtUP.app -exec xattr {} \; | grep -v "^$"
      
      # Create a DMG file instead of ZIP
      - name: Create DMG
        run: |
          # Create a temporary directory for DMG contents
          mkdir -p dmg_temp
          cp -R dist/CaughtUP.app dmg_temp/
          
          # Create a link to Applications folder
          ln -s /Applications dmg_temp/
          
          # Create the DMG
          create-dmg \
            --volname "CaughtUP-${{ needs.create-release.outputs.version }}" \
            --volicon "build_resources/icon.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "CaughtUP.app" 200 190 \
            --hide-extension "CaughtUP.app" \
            --app-drop-link 600 185 \
            "CaughtUP-macOS.dmg" \
            "dmg_temp/"
          
          # Verify the DMG was created
          ls -la CaughtUP-macOS.dmg
      
      # Fix DMG permissions and attributes
      - name: Fix DMG permissions
        run: |
          # Remove quarantine from DMG
          xattr -c CaughtUP-macOS.dmg
          
          # Make sure DMG is readable
          chmod 644 CaughtUP-macOS.dmg
      
      - name: Upload macOS artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./CaughtUP-macOS.dmg
          asset_name: CaughtUP-macOS-${{ needs.create-release.outputs.version }}.dmg
          asset_content_type: application/x-apple-diskimage