name: Build and Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python for version extraction
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Get version from setup.py
        id: get_version
        run: |
          # Extract version from setup.py using Python
          VERSION=$(python -c "import re; print(re.search(r'version=[\"\'](.*?)[\"\']', open('setup.py').read()).group(1))")
          echo "Version detected from setup.py: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: true
          prerelease: false
          body: |
            ## CaughtUP Release v${{ steps.get_version.outputs.version }}
            
            Automated build from the main branch.
            
            ### Downloads
            - Windows: CaughtUP-Windows-${{ steps.get_version.outputs.version }}.zip
            - macOS: CaughtUP-macOS-${{ steps.get_version.outputs.version }}.zip
            
            *This is an automatically generated draft release. Please add release notes before publishing.*

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Modify spec file to remove logs directory dependency
        run: |
          (Get-Content CaughtUP.spec) -replace "'logs', 'logs'", "'build_resources', 'build_resources'" | Set-Content CaughtUP.spec
      
      - name: Build Windows executable
        run: |
          pyinstaller CaughtUP.spec
      
      - name: Zip Windows artifact
        run: |
          Compress-Archive -Path dist\CaughtUP.exe -DestinationPath CaughtUP-Windows.zip
      
      - name: Upload Windows artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./CaughtUP-Windows.zip
          asset_name: CaughtUP-Windows-${{ needs.create-release.outputs.version }}.zip
          asset_content_type: application/zip

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Modify spec file to remove logs directory dependency
        run: |
          sed -i '' "s/'logs', 'logs'/'build_resources', 'build_resources'/g" CaughtUP.spec
      
      - name: Build macOS app
        run: |
          pyinstaller CaughtUP.spec
      
      - name: Zip macOS artifact
        run: |
          ditto -c -k --keepParent dist/CaughtUP.app CaughtUP-macOS.zip
      
      - name: Upload macOS artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./CaughtUP-macOS.zip
          asset_name: CaughtUP-macOS-${{ needs.create-release.outputs.version }}.zip
          asset_content_type: application/zip